{"ast":null,"code":"import _defineProperty from \"/home/dev/Bureau/TEST-SIMPLON/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/dev/Bureau/TEST-SIMPLON/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dev/Bureau/TEST-SIMPLON/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dev/Bureau/TEST-SIMPLON/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dev/Bureau/TEST-SIMPLON/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dev/Bureau/TEST-SIMPLON/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/dev/Bureau/TEST-SIMPLON/client/src/components/auth/Login.js\";\nimport React, { Component } from \"react\";\nimport { MDBRow, MDBCol, MDBInput, MDBBtn } from \"mdbreact\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\nimport { Link } from \"react-router-dom\";\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login() {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this));\n    _this.state = {\n      modal: false\n    };\n\n    _this.toggle = function () {\n      _this.setState({\n        modal: !_this.state.modal\n      });\n    };\n\n    _this.onChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.id, e.target.value));\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n      var userData = {\n        email: _this.state.email,\n        password: _this.state.password\n      };\n\n      _this.props.loginUser(userData);\n    };\n\n    _this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // If logged in and user navigates to Login page, should redirect them to dashboard\n      if (this.props.auth.isAuthenticated) {\n        this.props.history.push(\"/dashboard\");\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.auth.isAuthenticated) {\n        this.props.history.push(\"/dashboard\");\n      }\n\n      if (nextProps.errors) {\n        this.setState({\n          errors: nextProps.errors\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var errors = this.state.errors;\n      return React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"col-md-4\",\n        id: \"loginrow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        noValidate: true,\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"h5 text-center mb-4\",\n        id: \"loginp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Connexion\"), React.createElement(\"div\", {\n        className: \"grey-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(MDBInput, {\n        label: \"Votre adresse e-mail\",\n        icon: \"envelope\",\n        group: true,\n        type: \"email\",\n        success: \"right\",\n        id: \"email\",\n        onChange: this.onChange,\n        value: this.state.email // error={errors.email}\n        ,\n        className: classnames(\"\", {\n          invalid: errors.email || errors.emailnotfound\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"red-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, errors.email, errors.emailnotfound), React.createElement(MDBInput, {\n        label: \"Votre mot de passe\",\n        icon: \"lock\",\n        group: true,\n        type: \"password\",\n        onChange: this.onChange,\n        value: this.state.password // error={errors.password}\n        ,\n        id: \"password\",\n        className: classnames(\"\", {\n          invalid: errors.password || errors.passwordincorrect\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"red-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, errors.password, errors.passwordincorrect)), React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        type: \"submit\",\n        id: \"bouton-connecter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Se Connecter\"))), \"Vers \\xA0 \", React.createElement(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Accueil\")))), React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    errors: state.errors\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loginUser: loginUser\n})(Login);","map":{"version":3,"sources":["/home/dev/Bureau/TEST-SIMPLON/client/src/components/auth/Login.js"],"names":["React","Component","MDBRow","MDBCol","MDBInput","MDBBtn","PropTypes","connect","loginUser","classnames","Link","Login","state","modal","toggle","setState","onChange","e","target","id","value","onSubmit","preventDefault","userData","email","password","props","errors","auth","isAuthenticated","history","push","nextProps","invalid","emailnotfound","passwordincorrect","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { MDBRow, MDBCol, MDBInput, MDBBtn} from \"mdbreact\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\nimport { Link } from \"react-router-dom\";\n\nclass Login extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n  }\n\n  state = {\n    modal: false\n  }\n\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const userData = {\n      email: this.state.email,\n      password: this.state.password\n    };\n\n    this.props.loginUser(userData);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"container-fluid\">\n    <div className=\"row\">\n        <div className=\"col-md-4\"></div>\n        <div className=\"col-md-4\" id=\"loginrow\">\n        <MDBRow>\n          <MDBCol md=\"12\">\n            <form noValidate onSubmit={this.onSubmit}>\n              <p className=\"h5 text-center mb-4\" id=\"loginp\">Connexion</p>\n              <div className=\"grey-text\">\n                <MDBInput\n                  label=\"Votre adresse e-mail\"\n                  icon=\"envelope\"\n                  group\n                  type=\"email\"\n                  success=\"right\"\n                  id=\"email\"\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  // error={errors.email}\n                  className={classnames(\"\", {\n                    invalid: errors.email || errors.emailnotfound\n                  })}\n\n                />\n                 <span className=\"red-text\">\n                  {errors.email}\n                  {errors.emailnotfound}\n                </span>\n                <MDBInput\n                  label=\"Votre mot de passe\"\n                  icon=\"lock\"\n                  group\n                  type=\"password\"\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  // error={errors.password}\n                  id=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password || errors.passwordincorrect\n                  })}\n                />\n                 <span className=\"red-text\">\n                  {errors.password}\n                  {errors.passwordincorrect}\n                </span>\n              </div>\n              <div className=\"text-center\">\n                <MDBBtn type=\"submit\" id=\"bouton-connecter\">Se Connecter</MDBBtn>\n              </div>\n            </form>\n            Vers &nbsp; <Link to=\"/\">Accueil</Link>\n          </MDBCol>\n        </MDBRow>\n        </div>\n        <div className=\"col-md-4\"></div>\n    </div>\n       \n        </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { loginUser }\n)(Login);\n"]},"metadata":{},"sourceType":"module"}